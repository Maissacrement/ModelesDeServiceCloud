- name: Azure configuration
  hosts: 127.0.0.1
  connection: local

  tasks:

  # Completer les etapes manquant au script

  - name: Login to azure
    shell: az login --service-principal --username "{{lookup('env', 'client_id')}}" --password "{{lookup('env', 'secret')}}" --tenant "{{lookup('env', 'tenant')}}"
    register: ps

  - name: Create a resource group
    azure_rm_resourcegroup:
      name: myResourceGroupTest
      location: eastus
      tags:
          testing: testing
          delete: never
  
  #- name: Create an azure container registry
  #  azure_rm_containerregistry:
  #    name: autoapp

  #- debug: 
  #    var: ps.stdout_lines

  #- name: Docker push to the registry
  #  shell: |
  #    az acr login --name autoapp
  #    docker pull mcr.microsoft.com/azuredocs/azure-vote-front:v1
  #    docker tag mcr.microsoft.com/azuredocs/azure-vote-front:v1 autoapp.azurecr.io/azure-vote-front:v1
  #    docker push autoapp.azurecr.io/azure-vote-front:v1

  - debug:
      msg: "Documentation az aks create: https://learn.microsoft.com/fr-fr/cli/azure/aks?view=azure-cli-latest#az-aks-create"

  - name: Create aks cluster
    shell: |
      az aks create "completer ce script"

  - debug:
      msg: "Documentation az aks get-credentials: https://learn.microsoft.com/fr-fr/cli/azure/aks?view=azure-cli-latest#az-aks-get-credentials"

  # Le script qui permet de se joindre au noeud master kubernetes d'Azure ci dessous est complet
  - name: Install and Link azure-cli to kubectl
    shell: |
      az aks install-cli
      az aks get-credentials "completer ce script"

  # Voici le script qui deploie sur AKS votre app kubernetes il est fonctionnel
  - name: Deploy Kubernetes spec
    shell: |
      kubectl apply -f /home/kubeapplication.yml
    register: kube

  - debug: 
      var: kube.stdout_lines